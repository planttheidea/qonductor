{"version":3,"sources":["webpack://Qonductor/webpack/universalModuleDefinition","webpack://Qonductor/webpack/bootstrap","webpack://Qonductor/./src/CustomError.js","webpack://Qonductor/./src/QueueError.js","webpack://Qonductor/./src/QueueItem.js","webpack://Qonductor/./src/constants.js","webpack://Qonductor/./src/defaults.js","webpack://Qonductor/./src/index.js","webpack://Qonductor/./src/utils.js","webpack://Qonductor/external \"waddup\""],"names":["CustomError","message","Error","hasOwnProperty","captureStackTrace","constructor","Object","defineProperty","value","stack","QueueError","type","STATUSES","FAILED","QueueItem","id","fn","onComplete","cancelId","isCancelled","promiseId","status","PENDING","promise","_createPromiseWrapper","_cancelPromise","reject","CANCELLED","onSuccess","onFail","queuedFunction","done","Promise","resolve","_resolvePromise","_rejectPromise","data","RUNNING","then","_getUnsubscribeOnResolve","catch","_getUnsubscribeOnReject","error","_publishCancellation","COMPLETED","run","DEFAULTS","autoStart","keepHistory","maxConcurrency","TYPES","FIFO","LIFO","SIRO","keys","currentDefaults","getDefaults","resetDefaults","setDefaults","newDefaults","reduce","mergedDefaults","key","floor","Math","max","min","random","Qonductor","options","completed","completedCount","currentIndex","isRunning","pending","pendingCount","queue","running","runningCount","directlyAssignedValues","forEach","toLowerCase","_addQueueItemCancel","queueItem","_complete","index","_runQueue","_getNextIndex","length","SyntaxError","add","queueId","queueFunction","bind","cancel","start","clear","stop","getDone","success","fail","getOnFail","getOnSuccess"],"mappings":"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","file":"qonductor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"waddup\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Qonductor\", [\"waddup\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Qonductor\"] = factory(require(\"waddup\"));\n\telse\n\t\troot[\"Qonductor\"] = factory(root[\"waddup\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_waddup__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @class CustomError\n * @classdesc a custom error instance that has its own stack\n */\nclass CustomError extends Error {\n  constructor(message) {\n    super();\n\n    if (Error.hasOwnProperty('captureStackTrace')) {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: new Error().stack,\n      });\n    }\n\n    Object.defineProperty(this, 'message', {\n      value: message,\n    });\n  }\n}\n\nexport default CustomError;\n","// classes\nimport CustomError from './CustomError';\n\n// constants\nimport {STATUSES} from './constants';\n\n/**\n * @class QueueError\n * @classdesc the instance of the custom error\n */\nclass QueueError extends CustomError {\n  constructor(message = '', type = STATUSES.FAILED) {\n    super(`Queue promise was rejected with status ${type}${message ? `: ${message}.` : '.'}`);\n  }\n}\n\nexport default QueueError;\n","// external dependencies\nimport {\n  publish,\n  subscribe,\n  unsubscribe,\n} from 'waddup';\n\n// classes\nimport QueueError from './QueueError';\n\n// constants\nimport {STATUSES} from './constants';\n\n// utils\nimport {\n  getDone,\n  getOnFail,\n  getOnSuccess,\n} from './utils';\n\n/**\n * @class QueueItem\n * @classdesc Item in the queue of promises to be resolved\n */\nclass QueueItem {\n  constructor(id, fn, onComplete) {\n    this.id = id;\n    this.promise = this._createPromiseWrapper(fn, getOnSuccess(this, onComplete), getOnFail(this, onComplete));\n  }\n\n  cancelId = null;\n  isCancelled = false;\n  promiseId = null;\n  status = STATUSES.PENDING;\n\n  /**\n   * @private\n   *\n   * @function _cancelPromise\n   * @memberof QueueItem\n   * @instance\n   *\n   * @description\n   * cancel the existing promise, rejecting it with the message provided\n   *\n   * @param {function} reject\n   * @param {string} message\n   * @private\n   */\n  _cancelPromise(reject, message) {\n    this.status = STATUSES.CANCELLED;\n\n    reject(new QueueError(message, STATUSES.CANCELLED));\n  }\n\n  /**\n   * @private\n   *\n   * @function _createPromiseWrapper\n   * @memberof QueueItem\n   * @instance\n   *\n   * @description\n   * create the promise wrapper for the function passed\n   *\n   * @param {function} fn\n   * @param {function} onSuccess\n   * @param {function} onFail\n   * @return {Promise}\n   * @private\n   */\n  _createPromiseWrapper(fn, onSuccess, onFail) {\n    const queuedFunction = typeof fn === 'function' ? fn : (done) => done(fn);\n\n    return new Promise((resolve, reject) => {\n      const done = getDone(this._resolvePromise(resolve), this._rejectPromise(reject));\n\n      this.cancelId = subscribe(STATUSES.CANCELLED, ({data}) => {\n        if (data.id === this.id) {\n          this.isCancelled = true;\n\n          this._cancelPromise(reject, data.message);\n        }\n      });\n\n      this.promiseId = subscribe(STATUSES.RUNNING, ({data}) => {\n        if (data.id === this.id) {\n          queuedFunction(done);\n          unsubscribe(this.promiseId);\n        }\n      });\n    })\n      .then(this._getUnsubscribeOnResolve())\n      .catch(this._getUnsubscribeOnReject())\n      .then(onSuccess)\n      .catch(onFail);\n  }\n\n  /**\n   * @private\n   *\n   * @function _getUnsubscribeOnReject\n   * @memberof QueueItem\n   * @instance\n   *\n   * @description\n   * unsubscribe the cancellation once the promise is rejected\n   *\n   * @return {function(error: Error): Promise}\n   * @private\n   */\n  _getUnsubscribeOnReject() {\n    return (error) => {\n      unsubscribe(this.cancelId);\n\n      return Promise.reject(error);\n    };\n  }\n\n  /**\n   * @private\n   *\n   * @function _getUnsubscribeOnResolve\n   * @memberof QueueItem\n   * @instance\n   *\n   * @description\n   * unsubscribe the cancellation once the promise is resolved\n   *\n   * @return {function(data: any): Promise}\n   * @private\n   */\n  _getUnsubscribeOnResolve() {\n    return (data) => {\n      unsubscribe(this.cancelId);\n\n      return data;\n    };\n  }\n\n  /**\n   * @private\n   *\n   * @function _publishCancellation\n   * @memberof QueueItem\n   * @instance\n   *\n   * @description\n   * publish the cancellation\n   *\n   * @param {string} message\n   * @private\n   */\n  _publishCancellation(message) {\n    publish(STATUSES.CANCELLED, {\n      id: this.id,\n      message,\n    });\n  }\n\n  /**\n   * @private\n   *\n   * @function _rejectPromise\n   * @memberof QueueItem\n   * @instance\n   *\n   * @description\n   * reject the promise with the error provided\n   *\n   * @param {function} reject\n   * @return {function(error: Error): void}\n   * @private\n   */\n  _rejectPromise(reject) {\n    return (error) => {\n      if (!this.isCancelled) {\n        this.status = STATUSES.FAILED;\n\n        reject(new QueueError(error));\n      }\n    };\n  }\n\n  /**\n   * @private\n   *\n   * @function _resolvePromise\n   * @memberof QueueItem\n   * @instance\n   *\n   * @description\n   * resolve the promise with the data provided\n   *\n   * @param {function} resolve\n   * @return {function(data: any): void}\n   * @private\n   */\n  _resolvePromise(resolve) {\n    return (data) => {\n      if (!this.isCancelled) {\n        this.status = STATUSES.COMPLETED;\n\n        resolve(data);\n      }\n    };\n  }\n\n  /**\n   * @function run\n   * @memberof QueueItem\n   * @instance\n   *\n   * @description\n   * publish that this queueItem is running\n   */\n  run() {\n    this.status = STATUSES.RUNNING;\n\n    publish(STATUSES.RUNNING, {\n      id: this.id,\n      message: `${this.id} resolved successfully.`,\n    });\n  }\n}\n\nexport default QueueItem;\n","/**\n * @constant {Object} DEFAULTS\n */\nexport const DEFAULTS = {\n  autoStart: true,\n  keepHistory: true,\n  maxConcurrency: 10,\n  type: 'fifo',\n};\n\n/**\n * @constant {Object} STATUSES\n */\nexport const STATUSES = {\n  CANCELLED: 'CANCELLED',\n  COMPLETED: 'COMPLETED',\n  FAILED: 'FAILED',\n  PENDING: 'PENDING',\n  RUNNING: 'RUNNING',\n};\n\n/**\n * @constant {Object} TYPES\n */\nexport const TYPES = {\n  FIFO: 'fifo',\n  LIFO: 'lifo',\n  SIRO: 'siro',\n};\n","// constants\nimport {DEFAULTS} from './constants';\n\nconst {keys} = Object;\n\nexport let currentDefaults = {...DEFAULTS};\n\n/**\n * @function getDefaults\n *\n * @description\n * get the current defaults\n *\n * @return {{autoStart: boolean, keepHistory: boolean, maxConcurrency: number, type: string}}\n */\nexport const getDefaults = () => currentDefaults;\n\n/**\n * @function resetDefaults\n *\n * @description\n * reset the defaults to their original setting\n *\n * @return {object}\n */\nexport const resetDefaults = () => (currentDefaults = {...DEFAULTS});\n\n/**\n * @function setDefaults\n *\n * @description\n * assign the keys in newDefaults to those in defaults if they exist in defaults\n *\n * @param {object} newDefaults={}\n * @return {{autoStart: boolean, keepHistory: boolean, maxConcurrency: number, type: string}}\n */\nexport const setDefaults = (newDefaults = {}) =>\n  keys(newDefaults).reduce((mergedDefaults, key) => {\n    if (DEFAULTS.hasOwnProperty(key)) {\n      mergedDefaults[key] = newDefaults[key];\n    }\n\n    return mergedDefaults;\n  }, currentDefaults);\n","// classes\nimport QueueItem from './QueueItem';\n\n// constants\nimport {\n  STATUSES,\n  TYPES,\n} from './constants';\n\n// defaults\nimport {\n  getDefaults,\n  resetDefaults,\n  setDefaults,\n} from './defaults';\n\nconst {floor, max, min, random} = Math;\nconst {keys} = Object;\n\nclass Qonductor {\n  constructor(options = {}) {\n    const {type, ...directlyAssignedValues} = {\n      ...getDefaults(),\n      ...options,\n    };\n\n    keys(directlyAssignedValues).forEach((key) => {\n      this[key] = directlyAssignedValues[key];\n    });\n\n    this.type = type.toLowerCase();\n  }\n\n  completed = {};\n  completedCount = 0;\n  currentIndex = 0;\n  isRunning = false;\n  pending = {};\n  pendingCount = 0;\n  queue = {};\n  running = {};\n  runningCount = 0;\n\n  /**\n   * @private\n   *\n   * @function _addQueueItemCancel\n   * @memberof Qonductor\n   * @instance\n   *\n   * @description\n   * add the cancel function to the queueItem\n   *\n   * @param {object} queueItem\n   * @return {function(message): void}\n   * @private\n   */\n  _addQueueItemCancel(queueItem) {\n    return (message) => {\n      if (queueItem.status === STATUSES.PENDING || queueItem.status === STATUSES.RUNNING) {\n        queueItem._publishCancellation(message);\n      }\n    };\n  }\n\n  /**\n   * @private\n   *\n   * @function _complete\n   * @memberof Qonductor\n   * @instance\n   *\n   * @description\n   * remove the queueItem from the running / pending list and\n   * move to completed\n   *\n   * @param {number} index\n   * @param {object} queueItem\n   * @returns {void}\n   */\n  _complete(index, queueItem) {\n    if (!this.completed[index]) {\n      if (this.keepHistory) {\n        this.completed[index] = queueItem;\n      }\n\n      this.completedCount++;\n    }\n\n    if (this.running[index]) {\n      delete this.running[index];\n      this.runningCount--;\n    } else if (this.pending[index]) {\n      delete this.pending[index];\n      this.pendingCount--;\n    }\n\n    delete this.queue[index];\n\n    if (this.isRunning && this.pendingCount) {\n      return this._runQueue();\n    }\n\n    if (!this.runningCount && !this.pendingCount) {\n      this.isRunning = false;\n    }\n  }\n\n  /**\n   * @private\n   *\n   * @function _getNextIndex\n   * @memberof Qonductor\n   * @instance\n   *\n   * @description\n   * based on the type, return the next index to process\n   *\n   * @param {array<string>} keys\n   * @param {string} type\n   * @return {string}\n   * @private\n   */\n  _getNextIndex(keys, type) {\n    if (!keys.length) {\n      return -1;\n    }\n\n    switch (type) {\n      case TYPES.LIFO:\n        return max(...keys);\n\n      case TYPES.SIRO:\n        return keys[floor(random() * keys.length)];\n\n      default:\n        return min(...keys);\n    }\n  }\n\n  /**\n   * @private\n   *\n   * @function _runQueue\n   * @memberof Qonductor\n   * @instance\n   *\n   * @description\n   * run the items in the queue up to the maxConcurrency limit\n   *\n   * @private\n   */\n  _runQueue() {\n    let running = this.runningCount;\n\n    while (++running <= this.maxConcurrency) {\n      const index = this._getNextIndex(keys(this.pending), this.type);\n\n      if (index === -1) {\n        break;\n      }\n\n      const queueItem = this.pending[index];\n\n      this.running[index] = queueItem;\n      this.runningCount++;\n\n      delete this.pending[index];\n      this.pendingCount--;\n\n      queueItem.run();\n    }\n  }\n\n  /**\n   * @function getDefaults\n   * @memberof Qonductor\n   * @static\n   *\n   * @description\n   * get the global defaults for Qonductor\n   *\n   * @returns {object}\n   */\n  static getDefaults = getDefaults;\n\n  /**\n   * @function resetDefaults\n   * @memberof Qonductor\n   * @static\n   *\n   * @description\n   * reset the global defaults for Qonductor\n   *\n   * @returns {object}\n   */\n  static resetDefaults = resetDefaults;\n\n  /**\n   * @function setDefaults\n   * @memberof Qonductor\n   * @static\n   *\n   * @description\n   * set the global defaults for Qonductor\n   *\n   * @param {object} newDefaults={}\n   * @returns {object}\n   */\n  static setDefaults(newDefaults = {}) {\n    if (!newDefaults || newDefaults.constructor !== Object) {\n      throw new SyntaxError('Defaults assignment must be passed an object.');\n    }\n\n    return setDefaults(newDefaults);\n  }\n\n  /**\n   * @function add\n   * @memberof Qonductor\n   * @instance\n   *\n   * @description\n   * add the function to the queue\n   *\n   * @param {string} id the id to optionally assign\n   * @param {function} fn the asynchronous method\n   * @return {Promise}\n   */\n  add(id, fn) {\n    const index = this.currentIndex;\n\n    const queueId = typeof id === 'function' ? index : id;\n    const queueFunction = fn || id;\n\n    const queueItem = new QueueItem(queueId, queueFunction, this._complete.bind(this));\n\n    this.queue[index] = queueItem;\n\n    this.currentIndex++;\n\n    this.pending[index] = queueItem;\n    this.pendingCount++;\n\n    queueItem.promise.cancel = this._addQueueItemCancel(queueItem);\n\n    if (this.autoStart && !this.isRunning) {\n      this.start();\n    }\n\n    return queueItem.promise;\n  }\n\n  /**\n   * @function clear\n   * @memberof Qonductor\n   * @instance\n   *\n   * @description\n   * cancel all remaining promises in the queue\n   */\n  clear() {\n    Object.keys(this.queue).forEach((key) => {\n      if (this.queue[key].status !== STATUSES.COMPLETED) {\n        this.queue[key].promise.cancel();\n      }\n    });\n  }\n\n  /**\n   * @function start\n   * @memberof Qonductor\n   * @instance\n   *\n   * @description\n   * kick off the processing of the queue\n   */\n  start() {\n    if (this.isRunning) {\n      return;\n    }\n\n    this.isRunning = true;\n\n    this._runQueue();\n  }\n\n  /**\n   * @function stop\n   * @memberof Qonductor\n   * @instance\n   *\n   * @description\n   * stop processing pending queue items\n   */\n  stop() {\n    this.isRunning = false;\n  }\n}\n\nexport default Qonductor;\n","/**\n * @function getDone\n *\n * @description\n * get the done function with assigned success / fail actions based\n * on parameters passed to it\n *\n * @param {function} success\n * @param {function} fail\n * @return {function(data: string, error: QueueError): void}\n */\nexport const getDone = (success, fail) => (data, error) => (error ? fail(error) : success(data));\n\n/**\n * @function getOnFail\n *\n * @description\n * on fail, run the completion function and return a\n * rejected Promise to trigger the next catch\n *\n * @param {QueueItem} queueItem\n * @param {function} onComplete\n * @return {function(error: Error): Promise}\n */\nexport const getOnFail = (queueItem, onComplete) => (error) => {\n  onComplete(queueItem.id, queueItem);\n\n  return Promise.reject(error);\n};\n\n/**\n * @function getOnSuccess\n *\n * @description\n * on success, run the completion function and return the data\n * to trigger the next then\n *\n * @param {QueueItem} queueItem\n * @param {function} onComplete\n * @return {function(data: any): any}\n */\nexport const getOnSuccess = (queueItem, onComplete) => (data) => {\n  onComplete(queueItem.id, queueItem);\n\n  return data;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE_waddup__;"],"sourceRoot":""}