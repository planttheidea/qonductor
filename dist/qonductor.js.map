{"version":3,"sources":["webpack:///webpack/bootstrap 0722e43c1c1473d25269","webpack:///./src/index.js","webpack:///./src/constants.js","webpack:///./src/defaults.js","webpack:///./src/QueueItem.js","webpack:///external {\"amd\":\"waddup\",\"commonjs\":\"waddup\",\"commonjs2\":\"waddup\",\"root\":\"waddup\"}","webpack:///./src/QueueError.js","webpack:///./src/utils.js"],"names":["Qonductor","options","defaultAutoStart","autoStart","defaultKeepHistory","keepHistory","defaultMaxConcurrency","maxConcurrency","defaultType","type","Object","assign","completed","completedCount","currentIndex","isRunning","pending","pendingCount","queue","running","runningCount","toLowerCase","queueItem","message","status","PENDING","RUNNING","_publishCancellation","index","_runQueue","keys","length","LIFO","Math","max","apply","SIRO","floor","random","min","_getNextIndex","run","fn","_complete","bind","promise","cancel","_addQueueItemCancel","start","forEach","key","COMPLETED","newDefaults","SyntaxError","STATUSES","CANCELLED","FAILED","TYPES","FIFO","statuses","types","DEFAULTS","currentDefaults","getDefaults","resetDefaults","setDefaults","hasOwnProperty","getDone","success","fail","data","error","getOnFail","onComplete","id","Promise","reject","getOnSuccess","QueueItem","cancelId","isCancelled","promiseId","onFail","onSuccess","_createPromiseWrapper","queuedFunction","done","unsubscribeOnSuccess","_getUnsubscribeOnResolve","unsubscribeOnFail","_getUnsubscribeOnReject","resolve","_resolvePromise","_rejectPromise","topic","_cancelPromise","then","catch","CustomError","Error","captureStackTrace","constructor","defineProperty","value","stack","QueueError","toString","object","prototype","call","isFunction","isObject"],"mappings":"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","file":"qonductor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0722e43c1c1473d25269\n **/","import {\n  statuses,\n  types\n} from './constants';\n\nimport {\n  getDefaults,\n  resetDefaults,\n  setDefaults\n} from './defaults';\n\nimport QueueItem from './QueueItem';\n\nimport {\n  isObject\n} from './utils';\n\nclass Qonductor {\n  constructor(options = {}) {\n    const {\n      autoStart: defaultAutoStart,\n      keepHistory: defaultKeepHistory,\n      maxConcurrency: defaultMaxConcurrency,\n      type: defaultType\n    } = getDefaults();\n\n    const {\n      autoStart = defaultAutoStart,\n      keepHistory = defaultKeepHistory,\n      maxConcurrency = defaultMaxConcurrency,\n      type = defaultType\n    } = options;\n\n    Object.assign(this, {\n      autoStart,\n      completed: {},\n      completedCount: 0,\n      currentIndex: 0,\n      keepHistory,\n      isRunning: false,\n      maxConcurrency,\n      pending: {},\n      pendingCount: 0,\n      queue: {},\n      running: {},\n      runningCount: 0,\n      type: type.toLowerCase()\n    });\n  }\n\n  /**\n   * add the cancel function to the queueItem\n   * \n   * @param {object} queueItem\n   * @return {function(message): void}\n   * @private\n   */\n  _addQueueItemCancel(queueItem) {\n    return (message) => {\n      if (queueItem.status === statuses.PENDING || queueItem.status === statuses.RUNNING) {\n        queueItem._publishCancellation(message);\n      }\n    };\n  }\n\n  /**\n   * remove the queueItem from the running / pending list and\n   * move to completed\n   * \n   * @param {number} index\n   * @param {object} queueItem\n   * @private\n   */\n  _complete(index, queueItem) {\n    if (!this.completed[index]) {\n      if (this.keepHistory) {\n        this.completed[index] = queueItem;\n      }\n\n      this.completedCount++;\n    }\n\n    if (this.running[index]) {\n      delete this.running[index];\n      this.runningCount--;\n    } else if (this.pending[index]) {\n      delete this.pending[index];\n      this.pendingCount--;\n    }\n\n    delete this.queue[index];\n\n    if (this.isRunning && this.pendingCount) {\n      this._runQueue();\n    } else if (!this.runningCount && !this.pendingCount) {\n      this.isRunning = false;\n    }\n  }\n\n  /**\n   * based on the type, return the next index to process\n   *\n   * @param {array<string>} keys\n   * @param {string} type\n   * @return {string}\n   * @private\n   */\n  _getNextIndex(keys, type) {\n    if (!keys.length) {\n      return -1;\n    }\n\n    switch (type) {\n      case types.LIFO:\n        return Math.max.apply(this, keys);\n\n      case types.SIRO:\n        return keys[Math.floor(Math.random() * keys.length)];\n\n      default:\n        return Math.min.apply(this, keys);\n    }\n  }\n\n  /**\n   * run the items in the queue up to the maxConcurrency limit\n   *\n   * @private\n   */\n  _runQueue() {\n    let running = this.runningCount;\n\n    while (++running <= this.maxConcurrency) {\n      const index = this._getNextIndex(Object.keys(this.pending), this.type);\n\n      if (index === -1) {\n        break;\n      }\n\n      const queueItem = this.pending[index];\n\n      this.running[index] = queueItem;\n      this.runningCount++;\n\n      delete this.pending[index];\n      this.pendingCount--;\n\n      queueItem.run();\n    }\n  }\n\n  /**\n   * add the function to the queue\n   *\n   * @param {function} fn\n   * @return {Promise}\n   */\n  add(fn) {\n    const index = this.currentIndex;\n    const queueItem = new QueueItem(index, fn, this._complete.bind(this));\n\n    this.queue[index] = queueItem;\n\n    this.currentIndex++;\n\n    this.pending[index] = queueItem;\n    this.pendingCount++;\n\n    queueItem.promise.cancel = this._addQueueItemCancel(queueItem);\n\n    if (this.autoStart && !this.isRunning) {\n      this.start();\n    }\n\n    return queueItem.promise;\n  }\n\n  /**\n   * cancel all remaining promises in the queue\n   */\n  clear() {\n    Object.keys(this.queue).forEach((key) => {\n      if (this.queue[key].status !== statuses.COMPLETED) {\n        this.queue[key].promise.cancel();\n      }\n    });\n  }\n\n  /**\n   * get the global defaults for Qonductor\n   *\n   * @returns {object}\n   */\n  static getDefaults() {\n    return getDefaults();\n  }\n\n  /**\n   * reset the global defaults for Qonductor\n   *\n   * @returns {object}\n   */\n  static resetDefaults() {\n    return resetDefaults();\n  }\n\n  /**\n   * set the global defaults for Qonductor\n   *\n   * @param {object} newDefaults={}\n   * @returns {object}\n   */\n  static setDefaults(newDefaults = {}) {\n    if (!isObject(newDefaults)) {\n      throw new SyntaxError('Defaults assignment must be passed an object.');\n    }\n\n    return setDefaults(newDefaults);\n  }\n\n  /**\n   * kick off the processing of the queue\n   */\n  start() {\n    if (this.isRunning) {\n      return;\n    }\n\n    this.isRunning = true;\n\n    this._runQueue();\n  }\n\n  /**\n   * stop processing pending queue items\n   */\n  stop() {\n    this.isRunning = false;\n  }\n}\n\nexport default Qonductor;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","const STATUSES = {\n  CANCELLED: 'CANCELLED',\n  COMPLETED: 'COMPLETED',\n  FAILED: 'FAILED',\n  PENDING: 'PENDING',\n  RUNNING: 'RUNNING'\n};\n\nconst TYPES = {\n  FIFO: 'fifo',\n  LIFO: 'lifo',\n  SIRO: 'siro'\n};\n\nexport {STATUSES as statuses};\nexport {TYPES as types};\n\nexport default {\n  statuses: STATUSES,\n  types: TYPES\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/constants.js\n **/","const DEFAULTS = {\n  autoStart: true,\n  keepHistory: true,\n  maxConcurrency: 10,\n  type: 'fifo'\n};\n\nlet currentDefaults = {\n  ...DEFAULTS\n};\n\n/**\n * get the current defaults\n *\n * @return {{autoStart: boolean, keepHistory: boolean, maxConcurrency: number, type: string}}\n */\nconst getDefaults = () => {\n  return currentDefaults;\n};\n\n/**\n * reset the defaults to their original setting\n * \n * @return {object}\n */\nconst resetDefaults = () => {\n  currentDefaults = {\n    ...DEFAULTS\n  };\n  \n  return currentDefaults;\n};\n\n/**\n * assign the keys in newDefaults to those in defaults if they exist in defaults\n *\n * @param {object} newDefaults={}\n * @return {{autoStart: boolean, keepHistory: boolean, maxConcurrency: number, type: string}}\n */\nconst setDefaults = (newDefaults = {}) => {\n  Object.keys(newDefaults).forEach((key) => {\n    if (currentDefaults.hasOwnProperty(key)) {\n      currentDefaults[key] = newDefaults[key];\n    }\n  });\n  \n  return currentDefaults;\n};\n\nexport {getDefaults};\nexport {resetDefaults};\nexport {setDefaults};\n\nexport default {\n  getDefaults,\n  resetDefaults,\n  setDefaults\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/defaults.js\n **/","import {\n  publish,\n  subscribe,\n  unsubscribe\n} from 'waddup';\n\nimport {\n  statuses\n} from './constants';\n\nimport QueueError from './QueueError';\n\nimport {\n  isFunction\n} from './utils';\n\n/**\n * get the done function with assigned success / fail actions based\n * on parameters passed to it\n * \n * @param {function} success\n * @param {function} fail\n * @return {function(data: string, error: QueueError): void}\n */\nconst getDone = (success, fail) => {\n  return (data, error) => {\n    if (error) {\n      fail(error);\n    } else {\n      success(data);\n    }\n  };\n};\n\n/**\n * on fail, run the completion function and return a\n * rejected Promise to trigger the next catch\n *\n * @param {QueueItem} queueItem\n * @param {function} onComplete\n * @return {function(error: Error): Promise}\n */\nconst getOnFail = (queueItem, onComplete) => {\n  return (error) => {\n    onComplete(queueItem.id, queueItem);\n\n    return Promise.reject(error);\n  };\n};\n\n/**\n * on success, run the completion function and return the data\n * to trigger the next then\n *\n * @param {QueueItem} queueItem\n * @param {function} onComplete\n * @return {function(data: any): any}\n */\nconst getOnSuccess = (queueItem, onComplete) => {\n  return (data) => {\n    onComplete(queueItem.id, queueItem);\n\n    return data;\n  };\n};\n\nclass QueueItem {\n  constructor(id, fn, onComplete) {\n    Object.assign(this, {\n      cancelId: null,\n      id,\n      isCancelled: false,\n      promiseId: null,\n      status: statuses.PENDING\n    });\n\n    const onFail = getOnFail(this, onComplete);\n    const onSuccess = getOnSuccess(this, onComplete);\n\n    this.promise = this._createPromiseWrapper(fn, onSuccess, onFail);\n  }\n\n  /**\n   * create the promise wrapper for the function passed\n   *\n   * @param {function} fn\n   * @param {function} onSuccess\n   * @param {function} onFail\n   * @return {Promise}\n   * @private\n   */\n  _createPromiseWrapper(fn, onSuccess, onFail) {\n    const queuedFunction = isFunction(fn) ? fn : (done) => {\n      return done(fn);\n    };\n    const unsubscribeOnSuccess = this._getUnsubscribeOnResolve();\n    const unsubscribeOnFail = this._getUnsubscribeOnReject();\n\n    return new Promise((resolve, reject) => {\n      const success = this._resolvePromise(resolve);\n      const fail = this._rejectPromise(reject);\n      const done = getDone(success, fail);\n\n      this.cancelId = subscribe(statuses.CANCELLED, (topic, {id, message}) => {\n        if (id === this.id) {\n          this.isCancelled = true;\n\n          this._cancelPromise(reject, message);\n        }\n      });\n\n      this.promiseId = subscribe(statuses.RUNNING, (topic, id) => {\n        if (id === this.id) {\n          queuedFunction(done);\n\n          unsubscribe(this.promiseId);\n        }\n      });\n    })\n      .then(unsubscribeOnSuccess)\n      .catch(unsubscribeOnFail)\n      .then(onSuccess)\n      .catch(onFail);\n  }\n\n  /**\n   * cancel the existing promise, rejecting it with the message provided\n   *\n   * @param {function} reject\n   * @param {string} message\n   * @private\n   */\n  _cancelPromise(reject, message) {\n    this.status = statuses.CANCELLED;\n\n    reject(new QueueError(message, statuses.CANCELLED));\n  }\n\n  /**\n   * publish the cancellation\n   *\n   * @param {string} message\n   * @private\n   */\n  _publishCancellation(message) {\n    publish(statuses.CANCELLED, {\n      id: this.id,\n      message\n    });\n  }\n\n  /**\n   * reject the promise with the error provided\n   *\n   * @param {function} reject\n   * @return {function(error: Error): void}\n   * @private\n   */\n  _rejectPromise(reject) {\n    return (error) => {\n      if (!this.isCancelled) {\n        this.status = statuses.FAILED;\n\n        reject(new QueueError(error));\n      }\n    };\n  }\n\n  /**\n   * resolve the promise with the data provided\n   *\n   * @param {function} resolve\n   * @return {function(data: any): void}\n   * @private\n   */\n  _resolvePromise(resolve) {\n    return (data) => {\n      if (!this.isCancelled) {\n        this.status = statuses.COMPLETED;\n\n        resolve(data);\n      }\n    };\n  }\n\n  /**\n   * unsubscribe the cancellation once the promise is rejected\n   *\n   * @return {function(error: Error): Promise}\n   * @private\n   */\n  _getUnsubscribeOnReject() {\n    return (error) => {\n      unsubscribe(this.cancelId);\n\n      return Promise.reject(error);\n    };\n  }\n\n  /**\n   * unsubscribe the cancellation once the promise is resolved\n   *\n   * @return {function(data: any): Promise}\n   * @private\n   */\n  _getUnsubscribeOnResolve() {\n    return (data) => {\n      unsubscribe(this.cancelId);\n\n      return data;\n    };\n  }\n\n  /**\n   * publjsh that this queueItem is running\n   */\n  run() {\n    this.status = statuses.RUNNING;\n\n    publish(statuses.RUNNING, this.id);\n  }\n}\n\nexport default QueueItem;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/QueueItem.js\n **/","module.exports = undefined;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"waddup\",\"commonjs\":\"waddup\",\"commonjs2\":\"waddup\",\"root\":\"waddup\"}\n ** module id = 5\n ** module chunks = 0\n **/","import {\n  statuses\n} from './constants';\n\nclass CustomError extends Error {\n  constructor(message) {\n    super();\n\n    if (Error.hasOwnProperty('captureStackTrace')) {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      \n      Object.defineProperty(this, 'stack', {\n        value: (new Error()).stack\n      });\n    }\n\n    Object.defineProperty(this, 'message', {\n      value: message\n    });\n  }\n}\n\nclass QueueError extends CustomError {\n  constructor(message = '', type = statuses.FAILED) {\n    super(`Queue promise was rejected with status ${type}${message ? ': ' : '.'}${message}`);\n  }\n}\n\nexport default QueueError;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/QueueError.js\n **/","const toString = (object) => {\n  return Object.prototype.toString.call(object);\n};\n\n/**\n * determine whether object is a function\n *\n * @param {any} object\n * @return {boolean}\n */\nconst isFunction = (object) => {\n  return toString(object) === '[object Function]' || typeof object === 'function';\n};\n\n/**\n * determine whether object is an object\n *\n * @param {any} object\n * @return {boolean}\n */\nconst isObject = (object) => {\n  return toString(object) === '[object Object]' && !!object;\n};\n\nexport {isFunction};\nexport {isObject};\n\nexport default {\n  isFunction,\n  isObject\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/"],"sourceRoot":""}